#include <iostream>
#include "assert.h"

using namespace std;

#define max_players 100
#define max_mines 100
#define max_walls 100
#define MAX 10

char board[MAX][MAX];
int wxs[100];
int wys[100];
int p, px, py;
int m, mx, my;
int w, wx, wy;
int mode;


int main() {
    int y1, x2, dist;
    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            board[i][j] = '.';
        
}
    
}
    cin >> p;
    for (int i = 0; i < p; i++) {
        cin >> py;
        cin >> px;
        board[py][px] = (char)(48 + i);
    
}
    cin >> m;
    for (int i = 0; i < m; i++) {
        cin >> my;
        cin >> mx;
        board[my][mx] = '^';
    
}
    cin >> w;
    for (int i = 0; i < w; i++) {
        cin >> wy;
        cin >> wx;
        wxs[i] = wx;
        wys[i] = wy;
        board[wy][wx] = '#';
    
}
    cin >> mode;

    switch (mode) {
    case 0:
        for (int i = 0; i < MAX; i++) {
            for (int j = 0; j < MAX; j++) {
                cout << board[i][j];
            
}
            cout << endl;
        
}
        break;
    case 1:
        
        cin >> x2 >> y1 >> dist;
        for (int i = y1 - dist; i <= y1 + dist; i++) {
            for (int j = x2 - dist; j <= x2 + dist; j++) {
                if (i < 0 || j < 0 || i > 9 || j > 9) {
                    cout << '_';
                
}
                else {
                    cout << board[i][j];
                
}
            
}
            cout << endl;
        
}
        
        break;
    case 2:
        
        cin >> x2 >> y1 >> dist;
        for (int k = 0; k < w; k++) {
            if (wxs[k] > x2) {
                board[wxs[k] + 1][wys[k]] = '?';
            
}
            //else if (wxs[k] < x2) {
                //board[wxs[k] - 1][wys[k]] = '?';
            //}
            //else if (wys[k] > y1) {
                //board[wxs[k]][wys[k] - 1] = '?';
            //}
            //else if (wys[k] < y1) {
                //board[wxs[k]][wys[k] + 1] = '?';
            //}
            
        
}

        for (int i = y1 - dist; i <= y1 + dist; i++) {
            for (int j = x2 - dist; j <= x2 + dist; j++) {
                if (i < 0 || j < 0 || i > 9 || j > 9) {
                    cout << '_';
                
}
                else {
                    cout << board[i][j];
                
}
            
}
            cout << endl;
        
}

        break;
    case 3:
        break;
    default:
        break;
    
}


}